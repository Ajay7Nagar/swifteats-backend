services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: swifteats
      POSTGRES_USER: swifteats
      POSTGRES_PASSWORD: swifteats
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U swifteats -d swifteats"]
      interval: 5s
      timeout: 5s
      retries: 10
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
  api:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/swifteats
      SPRING_DATASOURCE_USERNAME: swifteats
      SPRING_DATASOURCE_PASSWORD: swifteats
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
