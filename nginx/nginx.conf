events {
    worker_connections 1024;
}

http {
    upstream swifteats_backend {
        server swifteats-app:8080;
        # Add more app instances here for load balancing
        # server swifteats-app-2:8080;
        # server swifteats-app-3:8080;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=location_updates:10m rate=100r/s;

    server {
        listen 80;
        server_name localhost;

        # Gzip compression
        gzip on;
        gzip_types text/plain application/json application/javascript text/css;

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://swifteats_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Higher rate limit for location updates
        location /api/drivers/location {
            limit_req zone=location_updates burst=200 nodelay;
            
            proxy_pass http://swifteats_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Shorter timeouts for location updates
            proxy_connect_timeout 2s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # WebSocket support for real-time features
        location /ws {
            proxy_pass http://swifteats_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint (no rate limiting)
        location /api/actuator/health {
            proxy_pass http://swifteats_backend;
            proxy_set_header Host $host;
            access_log off;
        }

        # Static content serving (if any)
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Error pages
        error_page 429 /rate_limit_exceeded.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            return 500 '{"error": "Internal Server Error", "message": "Service temporarily unavailable"}';
            add_header Content-Type application/json;
        }
        
        location = /rate_limit_exceeded.html {
            return 429 '{"error": "Rate Limit Exceeded", "message": "Too many requests, please try again later"}';
            add_header Content-Type application/json;
        }
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
